#!/bin/bash

# استيراد الإعدادات العامة
source "$(cd "$(dirname "$0")/.." && pwd)/config.sh"

# دالة فحص نقاط الضعف المتقدمة
scan_vulnerabilities() {
    local domain="$1"
    
    # التحقق من صحة المدخلات
    if ! validate_input "$domain"; then
        log_message "ERROR" "Invalid target for vulnerability scanning: $domain"
        return 1
    fi
    
    # تنظيف المدخلات
    domain=$(sanitize_input "$domain")
    
    # التحقق من اتصال الشبكة
    if ! ping -c 4 "$domain" &> /dev/null; then
        handle_error 1 "Cannot resolve or ping domain" "Network Connectivity Check"
        return 1
    fi
    
    # إنشاء مجلد للنتائج مع طابع زمني دقيق
    local timestamp=$(date +"%Y%m%d_%H%M%S")
    local results_dir="${REPORT_DIR}/vulnerability_scan_${domain}_${timestamp}"
    mkdir -p "$results_dir"
    
    # تعريف المتغيرات للمسح
    local scripts="vuln,http-sql-injection,http-xss,vulners"
    local min_rate=500
    local max_retries="${MAX_RETRIES:-3}"
    local timing="-T4"
    local output_format="-oA"
    
    log_message "INFO" "Starting comprehensive vulnerability scanning for: $domain"
    
    # مسار ملفات الإخراج
    local output_file="${results_dir}/nmap_vulnerability_scan"
    
    # تنفيذ مسح Nmap المتقدم مع معالجة الأخطاء
    nmap -sV -sC -p- \
         --script "$scripts" \
         --min-rate "$min_rate" \
         --max-retries "$max_retries" \
         --open "$timing" \
         -v "$output_format" "$output_file" \
         "$domain" > "${results_dir}/nmap_scan_details.txt" 2>&1
    
    # التحقق من نتيجة المسح
    local scan_result=$?
    if [ $scan_result -eq 0 ]; then
        log_message "SUCCESS" "Vulnerability scanning completed successfully"
    else
        handle_error "$scan_result" "Vulnerability scanning encountered issues" "Nmap Vulnerability Scan"
        return "$scan_result"
    fi
    
    # توليف تقرير الثغرات باستخدام jq
    {
        echo "Vulnerability Scan Report for Domain: $domain"
        echo "-------------------------------------------"
        echo "Scan Timestamp: $timestamp"
        echo "Scan Configuration:"
        echo "  - Scripts Used: $scripts"
        echo "  - Minimum Rate: $min_rate"
        echo "  - Max Retries: $max_retries"
        
        echo -e "\n1. Nmap Vulnerability Scan Results:"
        if [ -s "${results_dir}/nmap_scan_details.txt" ]; then
            # استخراج الثغرات المحتملة باستخدام grep
            grep -E 'CVE-[0-9]{4}-[0-9]+|VULNERABLE' "${results_dir}/nmap_scan_details.txt" || echo "No specific vulnerabilities detected"
        else
            echo "No detailed scan results available"
        fi
        
        echo -e "\nNote: Comprehensive vulnerability assessment requires manual review"
    } > "${results_dir}/vulnerability_assessment.txt"
    
    return 0
}

# دالة تحديث قاعدة بيانات الثغرات
update_vulnerability_database() {
    log_message "INFO" "Updating vulnerability databases"
    
    # تحديث قاعدة بيانات Nmap
    if command -v nmap &> /dev/null; then
        nmap --script-updatedb || {
            handle_error $? "Failed to update Nmap script database" "Vulnerability Database Update"
            return 1
        }
        log_message "SUCCESS" "Nmap script database updated"
    else
        log_message "WARNING" "Nmap not installed. Skipping script database update"
    fi
    
    # يمكن إضافة أدوات تحديث أخرى هنا مستقبلاً
}

# تصدير الدوال للاستخدام في وحدات أخرى
export -f scan_vulnerabilities
export -f update_vulnerability_database
